version: "2.1"

workflows:
  version: 2
  build:
    jobs:
      - godeps
      - jsdeps
      - gotest:
          requires:
            - godeps
      - jstest:
          requires:
            - jsdeps
      - influxql_validation:
          requires:
            - godeps
      - influxql_integration:
          requires:
            - godeps
      - golint:
          requires:
            - godeps
      - jslint:
          requires:
            - jsdeps
      - build:
          requires:
            - godeps
            - jsdeps
      - e2e:
          requires:
            - build
      - grace_daily:
          requires:
            - build
          filters:
            branches:
              only: /^(?!pull\/).*$/
      - litmus_daily:
          requires:
            - build
          filters:
            branches:
              only: /^(?!pull\/).*$/
      - cross_build:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - litmus_integration:
          requires:
            - litmus_daily
          filters:
            branches:
              only:
                - master

  hourly-e2e:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - godeps
      - jsdeps
      - build:
          requires:
            - godeps
            - jsdeps
      - e2e:
          requires:
            - build

  nightly:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - godeps
      - jsdeps
      - gotest:
          requires:
            - godeps
      - golint:
          requires:
            - godeps
      - influxql_validation:
          requires:
            - godeps
      - influxql_integration:
          requires:
            - godeps
      - jstest:
          requires:
            - jsdeps
      - jslint:
          requires:
            - jsdeps
      - deploy_nightly:
          requires:
            - gotest
            - golint
            - jstest
            - jslint
            - influxql_validation
            - influxql_integration
          filters:
            branches:
              only:
                - master
      - litmus_nightly:
          requires:
            - deploy_nightly
      - grace_nightly:
          requires:
            - deploy_nightly

  release:
    jobs:
      - godeps:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - jsdeps:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - gotest:
          requires:
            - godeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - golint:
          requires:
            - godeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - jstest:
          requires:
            - jsdeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - jslint:
          requires:
            - jsdeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - influxql_validation:
          requires:
            - godeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - influxql_integration:
          requires:
            - godeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/
      - release:
          requires:
            - gotest
            - golint
            - jstest
            - jslint
            - influxql_validation
            - influxql_integration
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-(rc|alpha|beta)\.[0-9]+)?$/

orbs:
  # Needed to install chrome for e2e testing.
  browser-tools: circleci/browser-tools@1.1

jobs:

  ####################
  ### UI-only jobs ###
  ####################

  jsdeps:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
            - yarn-deps-lock-
      - run:
          name: Install Dependencies
          command: |
            set +e
            cd ui
            yarn install --immutable
      - save_cache:
          name: Save Yarn Cache
          key: yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
          paths:
            - /home/circleci/go/src/github.com/influxdata/influxdb/ui/node_modules
            - ~/.cache/yarn
            - ~/.cache/Cypress

  jstest:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - run:
          name: install dependencies
          command: |
            cd ui
            # This should usually be a no-op (fully contained in the Yarn cache above), but we
            # include it to be safe since `yarn test` won't auto-install missing modules.
            yarn install --immutable
      - run: make ui_client
      - run:
          name: run tests
          command: |
            cd ui
            yarn test:circleci
      - store_test_results:
          path: ui/coverage
      - store_artifacts:
          path: ui/coverage
          destination: raw-test-output

  jslint:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - run:
          name: install dependencies
          command: |
            cd ui
            # This should usually be a no-op (fully contained in the Yarn cache above), but we
            # include it to be safe since the lint commands won't auto-install missing modules.
            yarn install --immutable
      - run: make ui_client
      - run:
          name: parallel eslint
          command: |
            cd ui
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn prettier:circleci ${TESTFILES[@]}
            yarn eslint:circleci ${TESTFILES[@]}

  #########################
  ### Backend-only jobs ###
  #########################

  godeps:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    resource_class: large
    environment:
      GOCACHE: /tmp/go-cache
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
            - influxdb-gomod-sum-
      - run:
          name: Install Dependencies
          command: go mod download -x
      - save_cache:
          name: Save GOPATH/pkg/mod
          key: influxdb-gomod-sum-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod

  golint:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    environment:
      GOCACHE: /tmp/go-cache
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - run: |
          # this is not in a seperate bash script because it isn't meant to be run on local.
          # it just checks to make sure that the same major/minor version of go is used in the mod file as on ci
          # to prevent accidentally checking in a wrong go mod version.
          gomodversiondiff=$( go mod edit -go=$( go version | sed -n 's/^.*go\([0-9]*.[0-9]*\).*$/\1/p') -print |diff - go.mod )
          if [ "$gomodversiondiff" ]
          then
            echo unexpected go version $gomodversiondiff
            exit 1
          fi
      - run: make vet
      - run: make checkfmt
      - run: make checktidy
      - run: GO111MODULE=on go mod vendor # staticcheck looks in vendor for dependencies.
      - run: GO111MODULE=on go install honnef.co/go/tools/cmd/staticcheck # Install staticcheck from the version we specify in go.mod.
      - run: GO111MODULE=on ./env staticcheck ./...

  gotest:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    resource_class: large
    environment:
      GOCACHE: /tmp/go-cache
      TEST_RESULTS: /tmp/test-results
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-gotest-{{ .Branch }}-{{ .Revision }}
            - influxdb-gotest-{{ .Branch }}-
            - influxdb-gotest-
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: run parallel race tests
          command: |
            GO_TEST_CMD="gotestsum --format standard-quiet --junitfile /tmp/test-results/gotestsum.xml -- -p=4"
            TESTFILES=($(go list ./... | circleci tests split --split-by=timings))
            make GO_TEST_CMD="$GO_TEST_CMD" GO_TEST_PATHS="${TESTFILES[*]}" test-go-race
      - save_cache:
          name: Save GOCACHE
          key: influxdb-gotest-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  influxql_validation:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    resource_class: large
    environment:
      GOCACHE: /tmp/go-cache
      TEST_RESULTS: /tmp/test-results
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-iqlvalidation-{{ .Branch }}-{{ .Revision }}
            - influxdb-iqlvalidation-{{ .Branch }}-
            - influxdb-iqlvalidation-
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - run: mkdir -p $TEST_RESULTS
      - run: make GO_TEST_CMD="gotestsum --format standard-quiet --junitfile /tmp/test-results/gotestsum.xml --" test-influxql-validation
      - save_cache:
          name: Save GOCACHE
          key: influxdb-iqlvalidation-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  influxql_integration:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    resource_class: large
    environment:
      GOCACHE: /tmp/go-cache
      TEST_RESULTS: /tmp/test-results
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-iqlintegration-{{ .Branch }}-{{ .Revision }}
            - influxdb-iqlintegration-{{ .Branch }}-
            - influxdb-iqlintegration-
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - run: mkdir -p $TEST_RESULTS
      - run: make GO_TEST_CMD="gotestsum --format standard-quiet --junitfile /tmp/test-results/gotestsum.xml --" test-influxql-integration
      - save_cache:
          name: Save GOCACHE
          key: influxdb-iqlintegration-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  #####################################
  ### UI+backend build/release jobs ###
  #####################################

  build:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    environment:
      GOCACHE: /tmp/go-cache
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - run: make checkcommit
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-build-{{ .Branch }}-{{ .Revision }}
            - influxdb-build-{{ .Branch }}-
            - influxdb-build-
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - run: make build
      - save_cache:
          name: Save GOCACHE
          key: influxdb-build-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache
      - persist_to_workspace:
          root: .
          paths:
            - project
            - bin/linux/influxd
            - bin/linux/influx
            - etc/litmus_success_notify.sh
            - etc/litmus_fail_notify.sh

  cross_build:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    environment:
      GOCACHE: /tmp/go-cache
    steps:
      - checkout
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-cross-build-{{ .Branch }}-{{ .Revision }}
            - influxdb-cross-build-{{ .Branch }}-
            - influxdb-build-{{ .Branch }}-{{ .Revision }}
            - influxdb-build-{{ .Branch }}-
            - influxdb-cross-build-
            - influxdb-build-
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - setup_remote_docker
      - run:
          name: Docker Login
          command: docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
      - run: make dist
      - save_cache:
          name: Save GOCACHE
          key: influxdb-cross-build-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache

  deploy_nightly:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    environment:
      GOCACHE: /tmp/go-cache
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-nightly-{{ .Branch }}-{{ .Revision }}
            - influxdb-nightly-{{ .Branch }}-
            - influxdb-build-{{ .Branch }}-{{ .Revision }}
            - influxdb-build-{{ .Branch }}-
            - influxdb-nightly-
            - influxdb-build-
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - setup_remote_docker
      - run:
          name: Docker Login
          command: docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
      - run:
          name: Build nightly
          command: make nightly
      - save_cache:
          name: Save GOCACHE
          key: influxdb-nightly-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache
      - persist_to_workspace:
          root: .
          paths:
            - etc/litmus_success_notify.sh
            - etc/litmus_fail_notify.sh

  release:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    environment:
      GOCACHE: /tmp/go-cache
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - checkout
      - restore_cache:
          name: Restore GOPATH/pkg/mod
          keys:
            - influxdb-gomod-sum-{{ checksum "go.sum" }}
      - restore_cache:
          name: Restore GOCACHE
          keys:
            - influxdb-release-{{ .Branch }}-{{ .Revision }}
            - influxdb-release-{{ .Branch }}-
            - influxdb-build-{{ .Branch }}-{{ .Revision }}
            - influxdb-build-{{ .Branch }}-
            - influxdb-release-
            - influxdb-build-
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - setup_remote_docker
      - run:
          name: Docker Login
          command: docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
      - run:
          name: import GPG key
          command: |
            echo -e "$GPG_PRIVATE_KEY" > private.key
            gpg --batch --import private.key
      - run:
          name: Build release
          command: make release
      - save_cache:
          name: Save GOCACHE
          key: influxdb-release-{{ .Branch }}-{{ .Revision }}
          paths:
            - /tmp/go-cache

  #################################
  ### e2e/integration test jobs ###
  #################################

  e2e:
    docker:
      - image: quay.io/influxdb/influxdb-circleci:latest
    environment:
      GOCACHE: /tmp/go-cache
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    steps:
      - browser-tools/install-browser-tools
      - checkout
      - attach_workspace:
          at: /home/circleci/go/src/github.com/influxdata/influxdb
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "ui/yarn.lock" }}
      - run:
          command: ./bin/linux/influxd --store=memory --e2e-testing=true --feature-flags=communityTemplates=true
          background: true
      - run: make e2e
      - store_test_results:
          path: ui/junit-results
      - store_artifacts:
          path: ui/cypress/videos
          destination: videos
      - store_artifacts:
          path: ui/cypress/screenshots
          destination: screenshots

  litmus_daily:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run: docker run --entrypoint "./run_litmus_tests_oss.sh" -e ONE_TEST=src/cloud/rest_api/smoke/test_smoke.py -e BINARYPATH=/Litmus/result/bin/linux/influxd -e BOLTPATH=/Litmus/result/influxd_test/influxd.bolt -e ENGINEPATH=/Litmus/result/influxd_test --net host -v /var/run/docker.sock:/var/run/docker.sock -v ~/project:/Litmus/result quay.io/influxdb/litmus:latest
      - run:
          name: Litmus Smoke Tests Success
          when: on_success
          command: bash ~/project/etc/litmus_success_notify.sh Smoke
          path: ~/project
      - run:
          name: Litmus Smoke Tests Fail
          when: on_fail
          command: bash ~/project/etc/litmus_fail_notify.sh Smoke
      - store_artifacts:
          path: ~/project
          destination: raw-daily-output
      - store_test_results:
          path: ~/project

  litmus_integration:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run: docker run --entrypoint "./run_litmus_tests_oss.sh" -e TEST_LIST=tests_lists/gateway_api_tests.list -e INFLUXPATH=/Litmus/result/bin/linux/influx -e BINARYPATH=/Litmus/result/bin/linux/influxd -e BOLTPATH=/tmp/influxd_test/influxd.bolt -e ENGINEPATH=/tmp/influxd_test --net host -v /var/run/docker.sock:/var/run/docker.sock -v ~/project:/Litmus/result quay.io/influxdb/litmus:latest
      - run:
          name: Litmus Integration Tests Success
          when: on_success
          command: bash ~/project/etc/litmus_success_notify.sh Integration
      - run:
          name: Litmus Integration Tests Failure
          when: on_fail
          command: bash ~/project/etc/litmus_fail_notify.sh Integration
      - store_artifacts:
          path: ~/project
          destination: raw-daily-output
      - store_test_results:
          path: ~/project

  litmus_nightly:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run: docker run --entrypoint "./run_litmus_tests_oss.sh" -e TEST_LIST=tests_lists/gateway_api_tests.list -e DOCKERIMAGE=true --net host -v /var/run/docker.sock:/var/run/docker.sock -v ~/project:/Litmus/result quay.io/influxdb/litmus:latest
      - run:
          name: Litmus Nightly Tests Success
          when: on_success
          command: bash ~/project/etc/litmus_success_notify.sh Nightly
      - run:
          name: Litmus Nightly Tests Fail
          when: on_fail
          command: bash ~/project/etc/litmus_fail_notify.sh Nightly
      - store_artifacts:
          path: ~/project
          destination: raw-nightly-output
      - store_test_results:
          path: ~/project

  grace_nightly:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run: docker run --net host -v /var/run/docker.sock:/var/run/docker.sock -e TEST_RESULTS=~/project quay.io/influxdb/grace:latest
      - store_artifacts:
          path: ~/project
      - store_test_results:
          path: ~/project

  grace_daily:
    machine: true
    steps:
      - attach_workspace:
          at: ~/project
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run:
          command: ./bin/linux/influxd --store=memory --log-level=debug
          background: true
      - run: docker run --net host -v /var/run/docker.sock:/var/run/docker.sock -v ~/project:/grace/test-results/grace-results quay.io/influxdb/grace:daily
      - store_artifacts:
          path: ~/project
