// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influxdb/v2 (interfaces: InstanceService)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	influxdb "github.com/influxdata/influxdb/v2"
)

// MockInstanceService is a mock of InstanceService interface.
type MockInstanceService struct {
	ctrl     *gomock.Controller
	recorder *MockInstanceServiceMockRecorder
}

// MockInstanceServiceMockRecorder is the mock recorder for MockInstanceService.
type MockInstanceServiceMockRecorder struct {
	mock *MockInstanceService
}

// NewMockInstanceService creates a new mock instance.
func NewMockInstanceService(ctrl *gomock.Controller) *MockInstanceService {
	mock := &MockInstanceService{ctrl: ctrl}
	mock.recorder = &MockInstanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstanceService) EXPECT() *MockInstanceServiceMockRecorder {
	return m.recorder
}

// CreateInstance mocks base method.
func (m *MockInstanceService) CreateInstance(arg0 context.Context) (*influxdb.Instance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInstance", arg0)
	ret0, _ := ret[0].(*influxdb.Instance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInstance indicates an expected call of CreateInstance.
func (mr *MockInstanceServiceMockRecorder) CreateInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInstance", reflect.TypeOf((*MockInstanceService)(nil).CreateInstance), arg0)
}

// GetInstance mocks base method.
func (m *MockInstanceService) GetInstance(arg0 context.Context) (*influxdb.Instance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstance", arg0)
	ret0, _ := ret[0].(*influxdb.Instance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstance indicates an expected call of GetInstance.
func (mr *MockInstanceServiceMockRecorder) GetInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstance", reflect.TypeOf((*MockInstanceService)(nil).GetInstance), arg0)
}
