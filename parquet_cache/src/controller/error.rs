/// Errors that can be generated by the controller.
#[derive(Debug, thiserror::Error)]
pub enum Error {
    /// Error when encoding a resource object.
    #[error("encoding error: {0}")]
    EncodingError(#[from] serde_json::Error),

    /// Error performing a kubernetes operation.
    #[error("kubernetes error: {0}")]
    KubeError(#[from] kube::Error),

    /// Error getting a cache node's state.
    #[error("node state error: {0}")]
    NodeStateError(Box<dyn std::error::Error + Send + Sync>),

    /// Error caused by an internal failure, this is almost certainly a bug.
    #[error("internal error: {0}")]
    InternalError(String),
}

impl Error {
    /// Create a new [Error::InternalError] with the provided message.
    pub fn internal(msg: &str) -> Self {
        Self::InternalError(String::from(msg))
    }
}

/// Result type for the controller.
pub type Result<T, E = Error> = std::result::Result<T, E>;
